"""
Написать два алгоритма нахождения i-го по счёту простого числа.
Без использования «Решета Эратосфена»;
Используя алгоритм «Решето Эратосфена»
Примечание ко всему домашнему заданию: Проанализировать скорость и сложность алгоритмов.
Результаты анализа сохранить в виде комментариев в файле с кодом.
"""
import timeit

start_time = timeit.timeit()
k = 15000  # найти k элемент, начиная с 2 (элемент 1)
n = 20000  # количество исходных элементов
result = []  # простые числа

#  способ без использования решета Эратосфена  t=0.0043
nums1 = list(range(1, n+1))
nums2 = list(range(0, n+1))

for i in nums1:
    if len(result) == k:
        break
    for j in nums2[2:i+1]:
        if (i % j) == 0 and i != j:
            break
        if j == i:
            result.append(i)


#  способ с использованием решета Эратосфена t = 0.0004
# a = list(range(n+1))
# a[1] = 0
# i = 2
#
# while i <= n:
#     if a[i] != 0:
#         result.append(a[i])
#         if len(result) == k:
#             break
#         for j in range(i, n+1, i):
#             a[j] = 0
#     i += 1


print(result[-1])
# print(result)
end_time = timeit.timeit()
print(end_time-start_time)

#  способ без использования решета Эратосфена  t=0.0043. сложность О(n**2)
#  способ с использованием решета Эратосфена t = 0.0004. сложность О(n)
#  второй способ на порядок быстрее